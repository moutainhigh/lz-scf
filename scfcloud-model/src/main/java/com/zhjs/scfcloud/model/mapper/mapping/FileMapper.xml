<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhjs.scfcloud.model.mapper.FileMapper">
  <resultMap id="BaseResultMap" type="com.zhjs.scfcloud.model.entity.File">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="business_id" jdbcType="BIGINT" property="businessId" />
    <result column="business_type_id" jdbcType="BIGINT" property="businessTypeId" />
    <result column="file_code" jdbcType="VARCHAR" property="fileCode" />
    <result column="new_file_name" jdbcType="VARCHAR" property="newFileName" />
    <result column="original_file_name" jdbcType="VARCHAR" property="originalFileName" />
    <result column="file_url" jdbcType="VARCHAR" property="fileUrl" />
    <result column="file_size" jdbcType="VARCHAR" property="fileSize" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="suffix" jdbcType="VARCHAR" property="suffix" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, company_id, business_id, business_type_id, file_code, new_file_name,
    original_file_name, file_url, file_size, file_type, suffix, status, update_time, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scf_file
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from scf_file
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zhjs.scfcloud.model.entity.File" useGeneratedKeys="true" keyProperty="id">
    insert into scf_file (id, company_id, business_id, 
      business_type_id, file_code,
      new_file_name, original_file_name, file_url, 
      file_size, file_type, suffix, 
      status, update_time, create_time
      )
    values (#{id,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{businessId,jdbcType=BIGINT}, 
      #{businessTypeId,jdbcType=BIGINT}, #{fileCode,jdbcType=VARCHAR},
      #{newFileName,jdbcType=VARCHAR}, #{originalFileName,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, 
      #{fileSize,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, #{suffix,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhjs.scfcloud.model.entity.File" useGeneratedKeys="true" keyProperty="id">
    insert into scf_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="businessTypeId != null">
        business_type_id,
      </if>
      <if test="fileCode != null">
        file_code,
      </if>
      <if test="newFileName != null">
        new_file_name,
      </if>
      <if test="originalFileName != null">
        original_file_name,
      </if>
      <if test="fileUrl != null">
        file_url,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="suffix != null">
        suffix,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=BIGINT},
      </if>
      <if test="businessTypeId != null">
        #{businessTypeId,jdbcType=BIGINT},
      </if>
      <if test="fileCode != null">
        #{fileCode,jdbcType=VARCHAR},
      </if>
      <if test="newFileName != null">
        #{newFileName,jdbcType=VARCHAR},
      </if>
      <if test="originalFileName != null">
        #{originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null">
        #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zhjs.scfcloud.model.entity.File">
    update scf_file
    <set>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=BIGINT},
      </if>
      <if test="businessTypeId != null">
        business_type_id = #{businessTypeId,jdbcType=BIGINT},
      </if>
      <if test="fileCode != null">
        file_code = #{fileCode,jdbcType=VARCHAR},
      </if>
      <if test="newFileName != null">
        new_file_name = #{newFileName,jdbcType=VARCHAR},
      </if>
      <if test="originalFileName != null">
        original_file_name = #{originalFileName,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="suffix != null">
        suffix = #{suffix,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zhjs.scfcloud.model.entity.File">
    update scf_file
    set company_id = #{companyId,jdbcType=BIGINT},
      business_id = #{businessId,jdbcType=BIGINT},
      business_type_id = #{businessTypeId,jdbcType=BIGINT},
      file_code = #{fileCode,jdbcType=VARCHAR},
      new_file_name = #{newFileName,jdbcType=VARCHAR},
      original_file_name = #{originalFileName,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      suffix = #{suffix,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findFileByFileCodes" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM scf_file sf
    WHERE sf.status = 1
    AND sf.company_id = #{companyId,jdbcType=BIGINT}
    AND sf.business_type_id = #{businessTypeId,jdbcType=BIGINT}
    AND sf.business_id = #{businessId,jdbcType=BIGINT}
    AND FIND_IN_SET(sf.file_code, ${fileCodes})
  </select>
</mapper>